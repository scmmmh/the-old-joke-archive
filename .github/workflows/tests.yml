name: Tests

on:
  push:
    branches: [ default, update ]
  pull_request:
    branches: [ default ]

jobs:
  api-tests:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    - name: Add .local path
      run: |
        echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV
        echo "PIPX_HOME=$HOME/.local/pipx" >> $GITHUB_ENV
        echo "PIPX_BIN_DIR=$HOME/.local/bin" >> $GITHUB_ENV

    - name: Install Base Dependencies
      run: |
        sudo apt-get install python3-venv pipx libtesseract4 libtesseract-dev
        pipx install poetry

    - name: Install Dependencies
      run: |
        poetry env use 3.9
        poetry install

    - name: Run Tests
      run: |
        poetry env use 3.9
        cd tests
        docker-compose up --no-start
        docker-compose start
        poetry run python -m toja server &
        sleep 5
        poetry run py.test api_tests

  e2e-tests:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 2
      matrix:
        browser: ['firefox:headless', 'chromium:headless']

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    - uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Add .local path
      run: |
        echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV
        echo "PIPX_HOME=$HOME/.local/pipx" >> $GITHUB_ENV
        echo "PIPX_BIN_DIR=$HOME/.local/bin" >> $GITHUB_ENV

    - name: Install Base Dependencies
      run: |
        sudo apt-get install python3-venv pipx libtesseract4 libtesseract-dev
        pipx install poetry

    - name: Install Dependencies
      run: |
        poetry env use 3.9
        poetry install --no-dev
        cd toja/server/frontend
        npm install
        cd ../../../
        cd tests/e2e
        npm install

    - name: Build the UI
      run: |
        cd toja/server/frontend
        ./node_modules/.bin/rollup -c

    - name: Run Tests
      run: |
        poetry env use 3.9
        cd tests
        docker-compose up --no-start
        docker-compose start
        poetry run python -m toja server &
        sleep 5
        cd e2e
        ./node_modules/.bin/testcafe ${{ matrix.browser }}
